index.html
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TechQuiz Host - Jogo de Perguntas Tecnológicas</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        .pulse-animation {
            animation: pulse 1.5s infinite;
        }
        .terminal-font {
            font-family: 'Courier New', monospace;
        }
        .glow-text {
            text-shadow: 0 0 8px rgba(59, 130, 246, 0.7);
        }
        .file-upload:hover {
            background-color: rgba(59, 130, 246, 0.1);
        }
        .progress-bar {
            transition: width 0.5s ease-in-out;
        }
        .question-card {
            transform-style: preserve-3d;
            transition: transform 0.6s;
        }
        .flipped {
            transform: rotateY(180deg);
        }
        .front, .back {
            backface-visibility: hidden;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        .back {
            transform: rotateY(180deg);
        }
    </style>
</head>
<body class="bg-gray-900 text-white min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <!-- Header -->
        <header class="text-center mb-12">
            <h1 class="text-4xl md:text-5xl font-bold mb-4 glow-text text-blue-400 terminal-font">
                <i class="fas fa-server mr-3"></i>TechQuiz Host
            </h1>
            <p class="text-gray-300 max-w-2xl mx-auto">
                Carregue seu arquivo de perguntas e teste seus conhecimentos em tecnologia e hospedagem!
            </p>
        </header>

        <!-- Main Content -->
        <main>
            <!-- Upload Section -->
            <section id="upload-section" class="bg-gray-800 rounded-xl p-6 mb-8 shadow-lg border border-gray-700 max-w-2xl mx-auto">
                <h2 class="text-2xl font-semibold mb-4 text-blue-300 flex items-center">
                    <i class="fas fa-file-upload mr-2"></i> Carregar Perguntas
                </h2>
                
                <div class="mb-6">
                    <p class="text-gray-300 mb-4">
                        Formato do arquivo (.txt): Cada pergunta deve estar em uma linha, seguida pela resposta na próxima linha. Exemplo:
                    </p>
                    <pre class="bg-gray-900 p-4 rounded-md text-green-400 overflow-x-auto terminal-font">
Qual protocolo é usado para transferência segura de arquivos?<br>SFTP<br>O que significa CDN?<br>Content Delivery Network<br>Qual é a porta padrão para HTTP?<br>80</pre>
                </div>
                
                <div class="file-upload border-2 border-dashed border-blue-400 rounded-lg p-8 text-center cursor-pointer hover:border-blue-300 transition-colors duration-300"
                     id="drop-area">
                    <input type="file" id="file-input" accept=".txt" class="hidden">
                    <div class="flex flex-col items-center justify-center">
                        <i class="fas fa-cloud-upload-alt text-5xl text-blue-400 mb-4"></i>
                        <p class="text-lg mb-2">Arraste e solte seu arquivo aqui</p>
                        <p class="text-gray-400 mb-4">ou</p>
                        <button id="select-file-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-full transition-colors duration-300 flex items-center">
                            <i class="fas fa-folder-open mr-2"></i> Selecionar Arquivo
                        </button>
                    </div>
                    <div id="file-info" class="mt-4 hidden">
                        <p class="text-green-400 flex items-center justify-center">
                            <i class="fas fa-check-circle mr-2"></i>
                            <span id="file-name"></span> selecionado
                        </p>
                    </div>
                </div>
                
                <div class="mt-6 flex justify-center">
                    <button id="start-quiz-btn" class="bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-8 rounded-full transition-colors duration-300 hidden pulse-animation flex items-center">
                        <i class="fas fa-play mr-2"></i> Iniciar Quiz
                    </button>
                </div>
            </section>

            <!-- Quiz Section (Hidden Initially) -->
            <section id="quiz-section" class="hidden max-w-3xl mx-auto">
                <div class="flex justify-between items-center mb-6">
                    <div class="bg-gray-800 px-4 py-2 rounded-lg">
                        <span class="text-blue-300 font-medium">Pontuação:</span>
                        <span id="score" class="font-bold ml-2">0</span>
                    </div>
                    <div class="bg-gray-800 px-4 py-2 rounded-lg">
                        <span class="text-blue-300 font-medium">Pergunta:</span>
                        <span id="question-count" class="font-bold ml-2">0/0</span>
                    </div>
                </div>
                
                <div class="relative h-2 bg-gray-700 rounded-full mb-8">
                    <div id="progress-bar" class="progress-bar h-full bg-blue-500 rounded-full" style="width: 0%"></div>
                </div>
                
                <div id="question-container" class="relative h-64">
                    <!-- Question cards will be inserted here by JavaScript -->
                </div>
                
                <div class="mt-8 flex justify-center space-x-4">
                    <button id="next-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-300 hidden">
                        Próxima <i class="fas fa-arrow-right ml-2"></i>
                    </button>
                    <button id="finish-btn" class="bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-300 hidden">
                        Finalizar <i class="fas fa-flag-checkered ml-2"></i>
                    </button>
                </div>
            </section>

            <!-- Results Section (Hidden Initially) -->
            <section id="results-section" class="hidden max-w-2xl mx-auto bg-gray-800 rounded-xl p-8 shadow-lg border border-gray-700">
                <div class="text-center">
                    <i class="fas fa-trophy text-5xl text-yellow-400 mb-4"></i>
                    <h2 class="text-3xl font-bold mb-2">Quiz Concluído!</h2>
                    <p class="text-xl mb-6">Sua pontuação final:</p>
                    <div class="text-5xl font-bold text-green-400 mb-8" id="final-score">0</div>
                    
                    <div class="grid grid-cols-2 gap-4 mb-8">
                        <div class="bg-gray-700 p-4 rounded-lg">
                            <div class="text-blue-300 mb-1">Perguntas</div>
                            <div class="text-2xl font-bold" id="total-questions">0</div>
                        </div>
                        <div class="bg-gray-700 p-4 rounded-lg">
                            <div class="text-green-300 mb-1">Acertos</div>
                            <div class="text-2xl font-bold" id="correct-answers">0</div>
                        </div>
                    </div>
                    
                    <button id="restart-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-full transition-colors duration-300">
                        <i class="fas fa-redo mr-2"></i> Jogar Novamente
                    </button>
                </div>
            </section>
        </main>

        <!-- Footer -->
        <footer class="mt-16 text-center text-gray-400 text-sm">
            <p>TechQuiz Host - Teste seus conhecimentos tecnológicos</p>
            <p class="mt-2">Desenvolvido com <i class="fas fa-heart text-red-400"></i> para entusiastas de tecnologia</p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const fileInput = document.getElementById('file-input');
            const selectFileBtn = document.getElementById('select-file-btn');
            const dropArea = document.getElementById('drop-area');
            const fileInfo = document.getElementById('file-info');
            const fileName = document.getElementById('file-name');
            const startQuizBtn = document.getElementById('start-quiz-btn');
            const uploadSection = document.getElementById('upload-section');
            const quizSection = document.getElementById('quiz-section');
            const resultsSection = document.getElementById('results-section');
            const questionContainer = document.getElementById('question-container');
            const scoreElement = document.getElementById('score');
            const questionCountElement = document.getElementById('question-count');
            const progressBar = document.getElementById('progress-bar');
            const nextBtn = document.getElementById('next-btn');
            const finishBtn = document.getElementById('finish-btn');
            const finalScoreElement = document.getElementById('final-score');
            const totalQuestionsElement = document.getElementById('total-questions');
            const correctAnswersElement = document.getElementById('correct-answers');
            const restartBtn = document.getElementById('restart-btn');

            // Quiz Variables
            let questions = [];
            let currentQuestionIndex = 0;
            let score = 0;
            let userAnswers = [];
            
            // Event Listeners
            selectFileBtn.addEventListener('click', () => fileInput.click());
            
            fileInput.addEventListener('change', function(e) {
                if (e.target.files.length) {
                    handleFileSelection(e.target.files[0]);
                }
            });
            
            // Drag and Drop functionality
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });
            
            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }
            
            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });
            
            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });
            
            function highlight() {
                dropArea.classList.add('border-blue-300');
                dropArea.classList.remove('border-blue-400');
            }
            
            function unhighlight() {
                dropArea.classList.remove('border-blue-300');
                dropArea.classList.add('border-blue-400');
            }
            
            dropArea.addEventListener('drop', function(e) {
                const dt = e.dataTransfer;
                const file = dt.files[0];
                if (file && file.name.endsWith('.txt')) {
                    handleFileSelection(file);
                }
            });
            
            startQuizBtn.addEventListener('click', startQuiz);
            nextBtn.addEventListener('click', showNextQuestion);
            finishBtn.addEventListener('click', showResults);
            restartBtn.addEventListener('click', resetQuiz);
            
            // Functions
            function handleFileSelection(file) {
                fileName.textContent = file.name;
                fileInfo.classList.remove('hidden');
                startQuizBtn.classList.remove('hidden');
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    const content = e.target.result;
                    parseQuestions(content);
                };
                reader.readAsText(file);
            }
            
            function parseQuestions(content) {
                const lines = content.split('\n').filter(line => line.trim() !== '');
                
                if (lines.length % 2 !== 0) {
                    alert('O arquivo deve conter pares de pergunta e resposta. Verifique se há uma resposta para cada pergunta.');
                    return;
                }
                
                questions = [];
                for (let i = 0; i < lines.length; i += 2) {
                    questions.push({
                        question: lines[i].trim(),
                        answer: lines[i+1].trim()
                    });
                }
                
                // Shuffle questions
                questions = shuffleArray(questions);
            }
            
            function shuffleArray(array) {
                for (let i = array.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    [array[i], array[j]] = [array[j], array[i]];
                }
                return array;
            }
            
            function startQuiz() {
                if (questions.length === 0) {
                    alert('Nenhuma pergunta válida encontrada no arquivo.');
                    return;
                }
                
                uploadSection.classList.add('hidden');
                quizSection.classList.remove('hidden');
                score = 0;
                currentQuestionIndex = 0;
                userAnswers = [];
                
                updateScore();
                showQuestion();
            }
            
            function showQuestion() {
                questionContainer.innerHTML = '';
                
                const currentQuestion = questions[currentQuestionIndex];
                const isLastQuestion = currentQuestionIndex === questions.length - 1;
                
                // Update UI
                questionCountElement.textContent = `${currentQuestionIndex + 1}/${questions.length}`;
                progressBar.style.width = `${((currentQuestionIndex + 1) / questions.length) * 100}%`;
                
                // Create question card
                const card = document.createElement('div');
                card.className = 'question-card w-full h-full bg-gray-800 rounded-xl p-6 shadow-lg cursor-pointer relative';
                card.innerHTML = `
                    <div class="front flex flex-col h-full">
                        <div class="flex-grow flex items-center justify-center">
                            <p class="text-xl md:text-2xl text-center">${currentQuestion.question}</p>
                        </div>
                        <div class="text-center text-gray-400 mt-4">
                            <p>Clique para revelar a resposta</p>
                            <i class="fas fa-chevron-down mt-1"></i>
                        </div>
                    </div>
                    <div class="back flex flex-col h-full">
                        <div class="flex-grow flex items-center justify-center">
                            <p class="text-xl md:text-2xl text-center text-green-400">${currentQuestion.answer}</p>
                        </div>
                        <div class="flex justify-center space-x-4 mt-4">
                            <button class="answer-btn bg-red-500 hover:bg-red-600 text-white py-2 px-6 rounded-lg" data-correct="false">
                                <i class="fas fa-times mr-2"></i> Errei
                            </button>
                            <button class="answer-btn bg-green-500 hover:bg-green-600 text-white py-2 px-6 rounded-lg" data-correct="true">
                                <i class="fas fa-check mr-2"></i> Acertei
                            </button>
                        </div>
                    </div>
                `;
                
                questionContainer.appendChild(card);
                
                // Add event listeners
                card.addEventListener('click', function() {
                    if (!card.classList.contains('flipped')) {
                        card.classList.add('flipped');
                        
                        // Show navigation buttons after answering
                        if (isLastQuestion) {
                            finishBtn.classList.remove('hidden');
                        } else {
                            nextBtn.classList.remove('hidden');
                        }
                    }
                });
                
                // Prevent bubbling from answer buttons
                const answerButtons = card.querySelectorAll('.answer-btn');
                answerButtons.forEach(button => {
                    button.addEventListener('click', function(e) {
                        e.stopPropagation();
                        const isCorrect = button.dataset.correct === 'true';
                        handleAnswer(isCorrect);
                    });
                });
            }
            
            function handleAnswer(isCorrect) {
                userAnswers.push({
                    question: questions[currentQuestionIndex].question,
                    answer: questions[currentQuestionIndex].answer,
                    isCorrect: isCorrect
                });
                
                if (isCorrect) {
                    score++;
                    updateScore();
                }
            }
            
            function updateScore() {
                scoreElement.textContent = score;
            }
            
            function showNextQuestion() {
                nextBtn.classList.add('hidden');
                currentQuestionIndex++;
                showQuestion();
            }
            
            function showResults() {
                quizSection.classList.add('hidden');
                resultsSection.classList.remove('hidden');
                
                finalScoreElement.textContent = score;
                totalQuestionsElement.textContent = questions.length;
                correctAnswersElement.textContent = score;
            }
            
            function resetQuiz() {
                resultsSection.classList.add('hidden');
                uploadSection.classList.remove('hidden');
                
                // Reset file input
                fileInput.value = '';
                fileInfo.classList.add('hidden');
                startQuizBtn.classList.add('hidden');
            }
        });
    </script>
</body>
</html>
